/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.event.MenuEvent;
import javax.swing.event.MenuListener;



public class DataExtractOption extends javax.swing.JFrame {

    /**
     * Creates new form DataExtractOption
     */
    public DataExtractOption() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener( new WindowAdapter()
        {
            public void windowClosing(WindowEvent e)
            {   
                setVisible(false);
                dispose();
                new Main(false).setVisible(true);
            }
        });
        
        //addMenuListener is used to perform action when a menu is clicked
        
        textExtractMenu.addMenuListener(new MenuListener()
                {
                    @Override
                    public void menuSelected(MenuEvent e)
                    {
                        new ExtractText().setVisible(true);
                        setVisible(false);
                        
                    }
                    
                    @Override
                    public void menuDeselected(MenuEvent e) {
                    }

                    @Override
                    public void menuCanceled(MenuEvent e) {
                    }
                }
        );
        
        imageExtractMenu.addMenuListener(new MenuListener()
                {
                    @Override
                    public void menuSelected(MenuEvent e)
                    {
                        new ExtractImage().setVisible(true);
                        setVisible(false);
                        
                    }
                    
                    @Override
                    public void menuDeselected(MenuEvent e) {
                    }

                    @Override
                    public void menuCanceled(MenuEvent e) {
                    }
                }
        );
        
        extractHelpMenu.addMenuListener(new MenuListener()
                {
                    @Override
                    public void menuSelected(MenuEvent e)
                    {
                        /*new ExtractText().setVisible(true);
                        setVisible(false);*/
                        
                    }
                    
                    @Override
                    public void menuDeselected(MenuEvent e) {
                    }

                    @Override
                    public void menuCanceled(MenuEvent e) {
                    }
                }
        );
        
        exitMenu.addMenuListener(new MenuListener()
                {
                    @Override
                    public void menuSelected(MenuEvent e)
                    {
                        /*new ExtractText().setVisible(true);
                        setVisible(false);*/
                        
                    }
                    
                    @Override
                    public void menuDeselected(MenuEvent e) {
                    }

                    @Override
                    public void menuCanceled(MenuEvent e) {
                    }
                }
        );
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        extractPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        extractMenuBar = new javax.swing.JMenuBar();
        textExtractMenu = new javax.swing.JMenu();
        imageExtractMenu = new javax.swing.JMenu();
        extractHelpMenu = new javax.swing.JMenu();
        exitMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(23);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 23)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Data Extraction Process: - This process is also known as data decoding process. In this process  the hidden  or  secret message (or file) is extracted out from the stego object. The extracted  secret message must maintain its integrity.Dataextraction algorithms requires the stegoobject to extract the secret message. ");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout extractPanelLayout = new javax.swing.GroupLayout(extractPanel);
        extractPanel.setLayout(extractPanelLayout);
        extractPanelLayout.setHorizontalGroup(
            extractPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(extractPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                .addContainerGap())
        );
        extractPanelLayout.setVerticalGroup(
            extractPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, extractPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addContainerGap())
        );

        textExtractMenu.setText("EXTRACT TEXT");
        extractMenuBar.add(textExtractMenu);

        imageExtractMenu.setText("EXTRACT IMAGE");
        extractMenuBar.add(imageExtractMenu);

        extractHelpMenu.setText("HELP");
        extractMenuBar.add(extractHelpMenu);

        exitMenu.setText("EXIT");
        extractMenuBar.add(exitMenu);

        setJMenuBar(extractMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(extractPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(extractPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataExtractOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataExtractOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataExtractOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataExtractOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataExtractOption().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu exitMenu;
    private javax.swing.JMenu extractHelpMenu;
    private javax.swing.JMenuBar extractMenuBar;
    private javax.swing.JPanel extractPanel;
    private javax.swing.JMenu imageExtractMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenu textExtractMenu;
    // End of variables declaration//GEN-END:variables
}
